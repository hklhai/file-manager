# 公司168-Linux
com.hxqh.filemanager.upload=/home/hadoop/doclinks
com.hxqh.filemanager.private=/home/hadoop/doclinks/private
com.hxqh.filemanager.icon=/home/hadoop/doclinks/icon
tomcat.ip=192.168.1.168
tomcat.port=8080
server.port=8099
spring.datasource.url=jdbc:mysql://app.center:3306/crcc?characterEncoding=utf8&useSSL=false
spring.datasource.username=root
spring.datasource.password=root


# 179-Linux
#com.hxqh.filemanager.upload=/home/hadoop/doclinks
#com.hxqh.filemanager.private=/home/hadoop/doclinks/private
#com.hxqh.filemanager.icon=/home/hadoop/doclinks/icon
#tomcat.ip=203.93.173.179
#tomcat.port=8665
#server.port=8099
#spring.datasource.url=jdbc:mysql://app.center:3306/crcc?characterEncoding=utf8&useSSL=false
#spring.datasource.username=root
#spring.datasource.password=root


# 公司-windows
#com.hxqh.filemanager.upload=C:/doclinks
#com.hxqh.filemanager.private=C:/doclinks/private
#com.hxqh.filemanager.icon=C:/doclinks/icon
#tomcat.ip=192.168.1.126
#tomcat.port=8555
#server.port=8099
#spring.datasource.url=jdbc:mysql://spark4:3306/crcc?characterEncoding=utf8&useSSL=false
#spring.datasource.username=root
#spring.datasource.password=mysql



# CRCC 测试部署-windows
#com.hxqh.filemanager.upload=C:/doclinks
#com.hxqh.filemanager.private=C:/doclinks/private
#com.hxqh.filemanager.icon=C:/doclinks/icon
#tomcat.ip=172.17.113.222
#tomcat.port=8000
#server.port=8099
#spring.datasource.url=jdbc:mysql://crcc.test:3306/crcc?characterEncoding=utf8&useSSL=false
#spring.datasource.username=root
#spring.datasource.password=crcc



server.tomcat.uri-encoding=utf-8
spring.velocity.charset=UTF-8
spring.velocity.properties.input.encoding=UTF-8
spring.velocity.properties.output.encoding=UTF-8


#spring.servlet.multipart.max-file-size=1000
spring.servlet.multipart.maxFileSize=100MB
spring.servlet.multipart.maxRequestSize=100MB
#Spring Data JPA
spring.jpa.database=MYSQL
spring.jpa.show-sql=false
spring.jpa.open-in-view=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.hbm2ddl.auto=update

#==================================
# HiKariCP连接池 相关设置
#----------------------------------
# hikari连接池的参数。（Tomcat pooling使用tomcat，dbcp2使用dbcp2）
# 定义获取连接的超时时间。最小250ms,默认30s
spring.datasource.hikari.connectionTimeout=10000
# 定义连接空闲时间。最小10s,默认10m
spring.datasource.hikari.idleTimeout=50000
# 定义最小的空闲连接数。推荐不设置。或与最大连接数一致；保持固定的连接数目
spring.datasource.hikari.minimumIdle=20
# 定义最大的连接数。默认10
spring.datasource.hikari.maximumPoolSize=20
# 定义连接的最大生命周期。推荐设置该属性。最小30s，默认30m
spring.datasource.hikari.maxLifeTime=600000
# 从连接池获取到连接后，进行检查的查询语句。推荐设置该属性。默认值为none
#spring.datasource.hikari.connectionTestQuery=select 1
com.hxqh.filemanager.file.url=http://${tomcat.ip}:${server.port}/file
com.hxqh.filemanager.file.tomcat.url=http://${tomcat.ip}:${tomcat.port}/file
com.hxqh.filemanager.file.download=/downloadFile?ftype=


#root日志以WARN级别输出
#logging.level.root=INFO
#springframework.web日志以DEBUG级别输出
logging.level.org.springframework.web=ERROR
#hibernate日志以ERROR级别输出
logging.level.org.hibernate.hql.internal.ast=WARN
logging.level.com.zaxxer.hikari=ERROR


